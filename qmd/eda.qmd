---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Exploratory data analysis {#sec-eda}

Note that all maps are zoomed into the area surrounded by the proposed geographic analysis scope.

```{r, echo = FALSE, results = FALSE, message = FALSE, warning = FALSE}
#| label: set-chunk-options

# Use caching, png, to make this section faster
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE)

library(ggplot2)

targets::tar_load(c("squid_vessel_list",
                    "joined_dataset_ais",
                    "pixels_eez_with_info",
                    "eez_boundaries_high_seas",
                    "sst_cc_forecast_data",
                    "eez",
                    "sprfmo",
                    "land",
                    "analysis_scope_lon",
                    "analysis_scope_lat",
                    "analysis_bounding_box"))

source("r/functions.R")
```

## Sea surface temperature (SST)

We can look at a map of SST, simply looking at the average monthly SST from across the entire January 2016 through August 2024 time series (@fig-sst-map).

```{r}
#| label: fig-sst-map
#| fig-cap: Map of mean sea surface temperature (SST) from across January 2016 through August 2024, using 0.5x0.5 degree pixels.

fig_sst_map <- ggplot() +
  geom_tile(data = joined_dataset_ais |>
  collapse::collap(FUN = list(sst_deg_c_mean = collapse::fmean),
                   by = ~ lon_bin + lat_bin,
                   cols = "sst_deg_c_mean") ,
            aes(fill = sst_deg_c_mean,
                x = lon_bin,
                y = lat_bin)) +
  geom_sf(data = land,
          color = "#374a6d",
          fill = "#374a6d") +
  scale_fill_viridis_c("Mean SST (degrees C)",
                       option = "inferno",
                       na.value = "black") +
  labs(x = '',
       y= '') +
  theme_map() +
  guides(fill = guide_colorbar(title.position = "top",
                               title.hjust = 0.5,
                               frame.colour = "black",
                               ticks.colour = "black",
                               barwidth = unit(12, "cm"),
                               barheight = unit(1, "cm"))) +
  scale_x_continuous(expand = c(0, 0),
                     limits = analysis_scope_lon) +
  scale_y_continuous(expand = c(0, 0),
                     limits = analysis_scope_lat)

fig_sst_map
```

Aggregating across the mean sea surface temperatures of each pixel, we can calculate the mean sea surface temperature over time within our study scope (@fig-sst-time-series). This allows us to see both seasonal trends and larger trends over time.

```{r}
#| label: fig-sst-time-series
#| fig-cap: Time series of monthly mean sea surface temperature (SST) within our study scope.

joined_dataset_ais |>
  collapse::collap(FUN = list(sst_deg_c_mean = collapse::fmean),
                   by = ~ month,
                   cols = "sst_deg_c_mean") |>
  ggplot(aes(x = month, y = sst_deg_c_mean)) +
  geom_line() +
  theme_plot() +
  labs(x = "",
       y = "Mean monthly SST\n(degrees C)")
```

## Sea surface temperature (SST) forecasts under climate change

Here we look at a map of mean sea surface temperature (SST) under the four different climate change scenarios, and the three different forecast horizons, and focusing on the area of our analysis scope (@fig-sst-map-cc-scenarios).

```{r}
#| label: fig-sst-map-cc-scenarios
#| fig-cap: Map of mean August sea surface temperature (SST) under four different climate change scenarios, and three different forecast horizons. Data are for 1x1 degree pixels. 
#| fig-height: 8

ggplot() +
  geom_tile(data = sst_cc_forecast_data|>
              dplyr::mutate(time_period = forcats::fct_relevel(time_period,"Near Term (2021-2040)",
                                                               "Medium Term (2041-2060)")),
            aes(fill = sst_deg_c_mean,
                x = lon_bin,
                y = lat_bin)) +
  geom_sf(data = land,
          color = "#374a6d",
          fill = "#374a6d") +
  scale_fill_viridis_c("Mean SST (degrees C)",
                       option = "inferno",
                       na.value = "black") +
  labs(x = '',
       y= '') +
  theme_map() +
  guides(fill = guide_colorbar(title.position = "top",
                               title.hjust = 0.5,
                               frame.colour = "black",
                               ticks.colour = "black",
                               barwidth = unit(12, "cm"),
                               barheight = unit(1, "cm"))) +
  facet_grid(time_period~scenario) +
  scale_x_continuous(expand = c(0, 0),
                     limits = analysis_scope_lon) +
  scale_y_continuous(expand = c(0, 0),
                     limits = analysis_scope_lat)
```

Here we look at time series of climate change forecasts for monthly average SST for each forecast time horizon and scenario, and focusing on our spatial analysis scope (@fig-sst-cc-forecasts-time-series). As expected, projected SST is higher for time horizon further into the future, and for more extreme climate change scenarios.

```{r}
#| label: fig-sst-cc-forecasts-time-series
#| fig-cap: Climate change forecasts for monthly average SST for each forecast time horizon and scenario, within our spatial analysis scope

sst_cc_forecast_data |>
  # Only select pixels within analysis scope
  dplyr::filter(lon_bin >= analysis_scope_lon[1] & lon_bin <= analysis_scope_lon[2] &
                  lat_bin >= analysis_scope_lat[1] & lat_bin <= analysis_scope_lat[2]) |>
  dplyr::group_by(time_period,scenario,month_number) |>
  dplyr::summarize(sst_deg_c_mean = mean(sst_deg_c_mean)) |>
  dplyr::ungroup() |>
  dplyr::mutate(time_period = forcats::fct_relevel(time_period,"Near Term (2021-2040)",
                                                   "Medium Term (2041-2060)"),
                scenario = forcats::fct_rev(scenario)) |>
  ggplot(aes(x = month_number,
             y = sst_deg_c_mean)) +
  geom_line(aes(color = scenario)) +
  facet_grid(~time_period) +
  theme_plot() +
  scale_color_brewer("CC Scenario",palette = "Set1") +
  scale_x_continuous(breaks = seq(1:12)) +
  labs(x = "Month",
       y = "Forecasted SST (degrees C)")
```

## Oceanic Niño Index (ONI)

Here we look at the time series of ONI data, focused on the time period for which we have AIS-based effort data (@fig-oni-time-series):

```{r}
#| label: fig-oni-time-series
#| fig-cap: Time series of monthly Oceanic Niño Index (ONI).

joined_dataset_ais |>
  dplyr::distinct(month, oceanic_nino_index) |>
  ggplot(aes(x = month, y = oceanic_nino_index)) +
  geom_line() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  theme_plot() +
  labs(x = "",
       y = "Oceanic Niño Index (ONI)")
```

## AIS-based Fishing effort

```{r}
# Add country names to joined_dataset_ais
# Filter to just analysis scope
joined_dataset_ais <- joined_dataset_ais |>
  dplyr::mutate(country = countrycode::countrycode(flag,
                                                   origin = "iso3c",
                                                   destination = "country.name")) |>
  # If country name is missing, call it Unknown
  dplyr::mutate(country = ifelse(is.na(country), "Unknown",country))

# Get top fishing flags across all time
n_flags <- 5
top_flags_all_time <- joined_dataset_ais |>
  dplyr::group_by(country) |>
  dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours, na.rm = TRUE)) |>
  dplyr::ungroup()  |>
  dplyr::slice_max(order_by = fishing_kw_hours, n = n_flags) |>
  dplyr::mutate(top = TRUE)

joined_dataset_ais <- joined_dataset_ais  |>
  dplyr::left_join(top_flags_all_time |>
                     dplyr::select(country,top), by = "country") 
```
Here we look at total fishing effort from 2016 through August 2024 within the analysis scope, by flag (@fig-effort-bar-plot). China dominates the fishing effort with over 97% of all effort, with Taiwan a distant second at barely 1%.

```{r}
#| label: fig-effort-bar-plot
#| fig-cap: Total fishing effort, by flag, from 2016 through August 2024 within the analysis scope. The label shows the percentage of total fishing effort that each flag contributes.

joined_dataset_ais|>
  dplyr::group_by(country) |>
  dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours,na.rm = TRUE)) |>
  dplyr::ungroup() |>
  dplyr::mutate(percent_total = scales::percent(fishing_kw_hours/sum(fishing_kw_hours,na.rm = TRUE),
                                                accuracy = .01)) |>
  dplyr::filter(fishing_kw_hours > 0) |>
  ggplot(aes(x = fishing_kw_hours, y= reorder(country,fishing_kw_hours))) +
  geom_bar(stat = "identity")+
  geom_label(aes(label = percent_total,
                 x = fishing_kw_hours+.2e9)) +
  labs(x = "Total fishing effort from 2016 through August 2024 (kW-hours)",
       y = "")+
  scale_x_continuous(labels = scales::unit_format(unit = "B", scale = 1e-9)) +
  theme_plot()
```

Next we look at a time series of total monthly AIS-based fishing effort by fishing flag over time within the analysis scope (@fig-effort-time-series). The top top `r n_flags` flags are shown.

```{r}
#| label: fig-effort-time-series
#| fig-cap: Monthly fishing effort by flag from 2016 through August 2024 within the analysis scope. The top 5 flags are shown individually.
#| fig-height: 7

joined_dataset_ais|> 
  dplyr::filter(country %in% top_flags_all_time$country) |>
  dplyr::mutate(country = forcats::fct_relevel(country,
                                               top_flags_all_time$country))|>
  dplyr::group_by(month,
                  country)  |>
  dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
  dplyr::ungroup()  |>
  ggplot(aes(x = month, y= fishing_kw_hours, fill = country)) +
  geom_line() +
  labs(x = "",
       y = "Monthly fishing effort by flag (kW-hours)")+
  scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6),
                     limits = c(0,NA)) +
  theme_plot() +
  facet_grid(country~.,
             scales = "free_y")
```

Next we can look at the temporal trend of total fishing effort alongside the temporal trend of SST (@fig-effort-sst-time-series).

```{r}
#| label: fig-effort-sst-time-series
#| fig-cap: Monthly trends of of a) mean sea surface temperature (SST); and b) total squid jigger fishing effort. Both time series include data from across the entire January 2016 through August 2024 time period, and from only within our spatial analysis scope.

fig_top <- joined_dataset_ais|>
  collapse::collap(FUN = list(sst_deg_c_mean = collapse::fmean),
                   by = ~ month,
                   cols = "sst_deg_c_mean") |>
  ggplot(aes(x = month, y= sst_deg_c_mean)) +
  geom_line() +
  labs(x = "",
       y = "Monthly mean SST\n(degrees C)") +
  theme_plot()

fig_bottom <- joined_dataset_ais|> 
  dplyr::group_by(month)  |>
  dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
  dplyr::ungroup()  |>
  ggplot(aes(x = month, y= fishing_kw_hours)) +
  geom_line() +
  labs(x = "",
       y = "Monthly total fishing effort\n(kW-hours)")+
  scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6),
                     limits = c(0,NA)) +
  theme_plot()

cowplot::plot_grid(fig_top, fig_bottom, ncol = 1,
                   labels = c("A","B"))
```

We can also aggregate the effort data by calculating the total effort for each month in each year, allowing us to look at the historic seasonal variation of total effort. We can do so for two regions: the "equatorial" region (latitude -10 to 10) and the "sub-equatorial" region (latitude -40 to -10) (@fig-sst-monthly-trends-by-region-equatorial, @fig-sst-monthly-trends-by-region-subequatorial).

```{r}
#| label: fig-effort-monthly-trends-by-region-equatorial
#| fig-cap: Historic seasonal variation of monthly total fishing effort for the equatorial region. The distribution for each month shows the spread of total fishing effort from each year in our historic dataset (January 2016 through August 2024) and within our spatial analysis scope.
#| fig-width: 7
#| fig-height: 2.5

historic_monthly_variation_effort_by_region <- joined_dataset_ais |>
  dplyr::filter(fishing_kw_hours > 0) |>
  dplyr::mutate(year = lubridate::year(month),
                month = lubridate::month(month)) |>
  dplyr::mutate(region = ifelse(lat_bin >= -10, "Equatorial (latitude -10 to 10)",
                                "Sub-equatorial (latitude -40 to -10)"))  |>
  dplyr::group_by(year, month, region) |>
  dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
  dplyr::ungroup() 

historic_monthly_variation_effort_by_region |> 
  dplyr::filter(region == "Equatorial (latitude -10 to 10)") |>
  ggplot(aes(x = month, y = fishing_kw_hours, group = month)) +
  geom_boxplot() +
  theme_plot() +
  labs(x = "Month",
       y = "Fishing\neffort  \n(kW-hours)",
       title = "Historic seasonal variation of monthly total fishing effort\nin the equatorial region (latitude -10 to 10)") +
  scale_x_continuous(breaks = 1:12) +
  theme(panel.grid.minor.x = element_blank(),
        axis.title.y = element_text(angle = 0, vjust = 0.65)) +
  scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
```

```{r}
#| label: fig-effort-monthly-trends-by-region-subequatorial
#| fig-cap: Historic seasonal variation of monthly total fishing effort for the sub-equatorial region. The distribution for each month shows the spread of total fishing effort from each year in our historic dataset (January 2016 through August 2024) and within our spatial analysis scope.
#| fig-width: 7
#| fig-height: 2.5
historic_monthly_variation_effort_by_region |> 
  dplyr::filter(region == "Sub-equatorial (latitude -40 to -10)") |>
  ggplot(aes(x = month, y = fishing_kw_hours, group = month)) +
  geom_boxplot() +
  theme_plot() +
  labs(x = "Month",
       y = "Fishing\neffort  \n(kW-hours)",
       title = "Historic seasonal variation of monthly total fishing effort\nin the subequatorial region (latitude -40 to -10)") +
  scale_x_continuous(breaks = 1:12) +
  theme(panel.grid.minor.x = element_blank(),
        axis.title.y = element_text(angle = 0, vjust = 0.65)) +
  scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
```

We can also aggregate the SST data by calculating the mean SST for each month in each year, allowing us to look at the historic seasonal variation of monthly mean sea surface temperature. We can do so for two regions: the "equatorial" region (latitude -10 to 10) and the "sub-equatorial" region (latitude -40 to -10) (@fig-sst-monthly-trends-by-region-equatorial, @fig-sst-monthly-trends-by-region-subequatorial).

```{r}
#| label: fig-sst-monthly-trends-by-region-equatorial
#| fig-cap: Historic seasonal variation of monthly mean sea surface temperature (SST) for the equatorial region. The distribution for each month shows the spread of mean SST from each year in our historic dataset (January 2016 through August 2024) and within our spatial analysis scope.
#| fig-width: 7
#| fig-height: 2.5

historic_monthly_variation_sst_by_region <- joined_dataset_ais |>
  dplyr::distinct(month,lon_bin,lat_bin,sst_deg_c_mean) |>
  dplyr::mutate(region = ifelse(lat_bin >= -10, "Equatorial (latitude -10 to 10)",
                                "Sub-equatorial (latitude -40 to -10)")) |>
  dplyr::mutate(year = lubridate::year(month),
                month = lubridate::month(month)) |>
  dplyr::group_by(year, month,region) |>
  dplyr::summarize(sst_deg_c_mean = mean(sst_deg_c_mean)) |>
  dplyr::ungroup() 

historic_monthly_variation_sst_by_region |> 
  dplyr::filter(region == "Equatorial (latitude -10 to 10)")|> 
  ggplot(aes(x = month, y = sst_deg_c_mean, group = month)) +
  geom_boxplot() +
  theme_plot() +
  labs(x = "Month",
       y = "Mean SST  \n(°C)",
       title = "Historic seasonal variation of monthly mean SST\nin the equatorial region (latitude -10 to 10)") +
  scale_x_continuous(breaks = 1:12) +
  theme(panel.grid.minor.x = element_blank(),
        axis.title.y = element_text(angle = 0, vjust = 0.5))
```

```{r}
#| label: fig-sst-monthly-trends-by-region-subequatorial
#| fig-cap: Historic seasonal variation of monthly mean sea surface temperature (SST) for the sub-equatorial region. The distribution for each month shows the spread of mean SST from each year in our historic dataset (January 2016 through August 2024) and within our spatial analysis scope.
#| fig-width: 7
#| fig-height: 2.5
historic_monthly_variation_sst_by_region |> 
  dplyr::filter(region == "Sub-equatorial (latitude -40 to -10)")|> 
  ggplot(aes(x = month, y = sst_deg_c_mean, group = month)) +
  geom_boxplot() +
  theme_plot() +
  labs(x = "Month",
       y = "Mean SST  \n(°C)",
       title = "Historic seasonal variation of monthly mean SST\nin the sub-equatorial region (latitude -40 to =10)") +
  scale_x_continuous(breaks = 1:12) +
  theme(panel.grid.minor.x = element_blank(),
        axis.title.y = element_text(angle = 0, vjust = 0.5))
```

Next we can look at at a map of AIS-based squid fishing effort (@fig-effort-map), aggregating effort across effort and flags and time for each pixel across the entire processed time series. EEZ boundaries from [Marine Regions v12](https://www.marineregions.org/downloads.php) are shown in orange (@marineregionsv12).

```{r}
#| label: fig-effort-map
#| fig-cap: Map of squid jigger fishing effort from 2016 through August 2024, aggregating effort across effort, flags, and time for each pixel. EEZ boundaries from Marine Regions V12 are shown in orange; the SPRFMO boundary is shown in yellow.

fig_effort_map <- ggplot()  +
  geom_tile(data = joined_dataset_ais |>
              dplyr::group_by(lat_bin,
                              lon_bin) |>
              dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
              dplyr::ungroup()|>
              dplyr::filter(fishing_kw_hours > 0),
            aes(fill = fishing_kw_hours,
                x = lon_bin,
                y = lat_bin)) +
  geom_sf(data = eez,
          fill = NA,
          color = "orange") +
  geom_sf(data = sprfmo,
          fill = NA,
          color = "yellow") +
  geom_sf(data = land,
          color = "#374a6d",
          fill = "#374a6d") +
  scale_fill_viridis_c("Fishing effort (kwW-hours)",
                       trans = "log10",
                       option = "mako",
                       na.value = "black") +
  labs(x = '',
       y= '') +
  theme_map() +
  guides(fill = guide_colorbar(title.position = "top",
                               title.hjust = 0.5,
                               frame.colour = "black",
                               ticks.colour = "black",
                               barwidth = unit(12, "cm"),
                               barheight = unit(1, "cm"))) +
  scale_x_continuous(expand = c(0, 0),
                     limits = analysis_scope_lon) +
  scale_y_continuous(expand = c(0, 0),
                     limits = analysis_scope_lat)

fig_effort_map
```

We can also look at this map of total fishing effort alongside a map of mean SST (@fig-effort-sst-map).

```{r}
#| label: fig-effort-sst-map
#| fig-cap: Maps of a) mean sea surface temperature (SST); and b) total squid jigger fishing effort (EEZ boundaries from Marine Regions V12 are shown in orange; the SPRFMO boundary is shown in yellow). Both maps include data from across the entire January 2016 through August 2024 time period, using 0.5x0.5 degree pixels.


cowplot::plot_grid(fig_sst_map,
                   fig_effort_map,
                   ncol = 2,
                   labels = c("A","B"))
```

We can also look at these effort maps, broken apart by flag, and still aggregating squid jigger fishing effort from 2016 through August 2024, aggregating effort across time for each pixel. The top `r n_flags` flags are shown.

```{r}
purrr::map(top_flags_all_time$country,
           function(country_tmp){
             ggplot()  +
               geom_tile(data = joined_dataset_ais|>
                           dplyr::filter(fishing_kw_hours > 0)  |>
                           dplyr::filter(country == country_tmp) |>
                           dplyr::group_by(lat_bin,
                                           lon_bin) |>
                           dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
                           dplyr::ungroup(),
                         aes(fill = fishing_kw_hours,
                             x = lon_bin,
                             y = lat_bin)) +
               geom_sf(data = eez,
                       fill = NA,
                       color = "orange") +
               geom_sf(data = sprfmo,
                       fill = NA,
                       color = "yellow") +
               geom_sf(data = land,
                       color = "#374a6d",
                       fill = "#374a6d") +
               scale_fill_viridis_c("Fishing effort (kwW-hours)",
                                    trans = "log10",
                                    option = "mako",
                                    na.value = "black") +
               labs(x = '',
                    y= '',
                    title = glue::glue("{country_tmp}\n")) +
               theme_map() +
               guides(fill = guide_colorbar(title.position = "top",
                                            title.hjust = 0.5,
                                            frame.colour = "black",
                                            ticks.colour = "black",
                                            barwidth = unit(12, "cm"),
                                            barheight = unit(1, "cm"))) +
               scale_x_continuous(expand = c(0, 0),
                                  limits = analysis_scope_lon) +
               scale_y_continuous(expand = c(0, 0),
                                  limits = analysis_scope_lat)
           })
```

# Distance to nearest EEZ

Here we look at a map showing the distance to the nearest 200nm EEZ/high seas boundary for each 0.25x0.25 degree pixel. For pixels on the high seas, this number represents the distance to the nearest EEZ; for pixels inside EEZs, this represents the shortest distance to the high seas.

```{r}
#| label: fig-distance-to-eez-map
#| fig-cap: Map showing the distance to the nearest 200nm EEZ/high seas boundary for each 0.25x0.25 degree pixel. 200nm EEZ boundaries from Marine Regions V12 are shown in black.

ggplot()  +
  geom_tile(data = pixels_eez_with_info,
            aes(fill = nearest_eez_distance_m/1e3,
                x = lon_bin,
                y = lat_bin)) +
  geom_sf(data = eez_boundaries_high_seas,
          fill = NA,
          color = "black") +
  geom_sf(data = land,
          color = "#374a6d",
          fill = "#374a6d") +
  scale_fill_viridis_c("Distance to nearest 200nm EEZ/high seas boundary (km)",
                       option = "rocket",
                       na.value = "black",
                       labels = scales::comma,
                       direction = -1) +
  labs(x = '',
       y= '') +
  theme_map() +
  guides(fill = guide_colorbar(title.position = "top",
                               title.hjust = 0.5,
                               frame.colour = "black",
                               ticks.colour = "black",
                               barwidth = unit(12, "cm"),
                               barheight = unit(1, "cm"))) +
  scale_x_continuous(expand = c(0, 0),
                     limits = analysis_scope_lon) +
  scale_y_continuous(expand = c(0, 0),
                     limits = analysis_scope_lat)
```