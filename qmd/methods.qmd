---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Methods {#sec-methods}

```{r, echo = FALSE, results = FALSE, message = FALSE, warning = FALSE}
#| label: set-chunk-options
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE)
library(skimr)
library(ggplot2)

targets::tar_load(c("ais_date_start",
                    "ais_date_end",
                    "spatial_resolution",
                    "temporal_resolution",
                    "squid_vessel_list",
                    "joined_dataset_ais_summary",
                    "joined_dataset_viirs_summary",
                    "eez",
                    "sprfmo",
                    "land",
                    "joined_dataset_ais",
                    "analysis_scope_lon",
                    "analysis_scope_lat",
                    "analysis_bounding_box"))

source("r/functions.R")
```

## Data sources

### Sea surface temperature (SST)

Sea surface temperature (SST) data come from [NOAA's Optimum Interpolation Sea Surface Temperature (OISST) version 2.1](https://coastwatch.pfeg.noaa.gov/erddap/griddap/ncdcOisst21Agg.html) (@huang2021improvements), which were downloaded from their Coast Watch ERDDAP server. The raw data are provided globally at 0.25x0.25 degree daily resolution. Keeping the full 0.25x0.25 degree spatial resolution, we temporally aggregate the daily data to monthly resolution by calculating the mean, standard deviation, minimum, and maximum from across the days in each month.

### Sea surface temperature (SST) forecasts under climate change

We use SST forecasts under climate change from the [IPCC WGI Interactive Atlas](https://interactive-atlas.ipcc.ch/regional-information#eyJ0eXBlIjoiQVRMQVMiLCJjb21tb25zIjp7ImxhdCI6OTc3MiwibG5nIjo0MDA2OTIsInpvb20iOjQsInByb2oiOiJFUFNHOjU0MDMwIiwibW9kZSI6ImNvbXBsZXRlX2F0bGFzIn0sInByaW1hcnkiOnsic2NlbmFyaW8iOiJzc3A1ODUiLCJwZXJpb2QiOiJmYXIiLCJzZWFzb24iOiJ5ZWFyIiwiZGF0YXNldCI6IkNNSVA2IiwidmFyaWFibGUiOiJ0b3MiLCJ2YWx1ZVR5cGUiOiJWQUxVRSIsImhhdGNoaW5nIjoiU0lNUExFIiwicmVnaW9uU2V0IjoiYXI2IiwiYmFzZWxpbmUiOiJwcmVJbmR1c3RyaWFsIiwicmVnaW9uc1NlbGVjdGVkIjpbXX0sInBsb3QiOnsiYWN0aXZlVGFiIjoicGx1bWUiLCJtYXNrIjoibm9uZSIsInNjYXR0ZXJZTWFnIjpudWxsLCJzY2F0dGVyWVZhciI6bnVsbCwic2hvd2luZyI6ZmFsc2V9fQ==)(@iturbide2021repository). The Atlas provides a platform for accessing ensemble forecasts from CMIP6 (Coupled Model Intercomparison Project Phase 6), which represent the latest global climate forecasts available and served as the basis of the [6th IPCC Assessment Report](https://www.ipcc.ch/assessment-report/ar6/). 

We pull 1x1 degree monthly mean SST data for three time horizons:

1. Near Term (2021-2040) 
2. Medium Term (2041-2060)
3. Long Term (2081-2100)

And for each time horizon, we pull data from four climate change scenarios (more information on the scenarios can be found [here](https://climate-scenarios.canada.ca/?page=cmip6-overview-notes):

1. SSP1-2.6
2. SSP2-4.5
3. SSP3-7.0
4. SSP5-8.5

This gives us a total of 12 different forecasts to analyze. The dataset can be loaded in targets using `targets::tar_load(sst_cc_forecast_data)`, and it has the following columns:

* **lon_bin**:  1x1 degree longitude bin (degrees) (numeric)  
* **lat_bin**:  1x1 degree latitude bin (degrees) (numeric)  
* **sst_deg_c_mean**: Mean sea surface temperature from across the ensemble of CMIP6 models (degrees C) (numeric)
* **time_period**: Future time horizon forecast time period (character)
* **scenario**: Climate change scenario (character)
* **month_number**: Month number (numeric)

### Oceanic Niño Index (ONI)

According to [NOAA](https://www.climate.gov/news-features/understanding-climate/climate-variability-oceanic-nino-index):

- "The Oceanic Niño Index (ONI) is NOAA's primary index for tracking the ocean part of ENSO, the El Niño-Southern Oscillation climate pattern."
- "The ONI is the rolling 3-month average temperature anomaly—difference from average—in the surface waters of the east-central tropical Pacific, near the International Dateline."
- "Index values of +0.5 or higher indicate El Niño. Values of -0.5 or lower indicate La Niña."

We downloaded these data from `https://psl.noaa.gov/data/correlation/oni.data` on September 27, 2024.

### AIS-based Fishing effort

We use satellite-based individual vessel monitoring AIS data processed by Global Fishing Watch (@kroodsma2018tracking). We use the V3 pipeline table `pipe_ais_v3_published.messages`. Variables of interest within this table include the following
(descriptions are taken directly from the schema for
`pipe_ais_v3_published.messages`):

-   `ssvid`: source specific vessel id; MMSI for AIS
-   `hours`: time since the previous position in the segment
-   `timestamp`: timestamp for position
-   `lon`: longitude
-   `lat`: latitude
-   `night_loitering`: 1 if the seg_id of every message of a squid_jigger that is at night and not moving, 0 if not.

In order to minimize noisy data, we only include AIS messages that have
a `clean_segs` boolean (i.e., all messages must have `good_seg` boolean
and must not have an `overlapping_and_short` boolean). We filter to just those messages where `night_loitering = 1`. For squid jigging vessels, GFW uses the heuristic of night loitering to identify when they are fishing. Therefore, any `hours` where `night_loitering = 1` can be classified as `fishing_hours`

We take the raw high-resolution AIS data and aggregate `fishing_hours` spatially (by `r spatial_resolution`x`r spatial_resolution` degree pixels, which are roughly `r spatial_resolution*111`km x `r spatial_resolution*111`km at the equator), temporally by `r stringr::str_to_lower(temporal_resolution)`, and by flag. We currently process data from `r stringr::str_remove_all(ais_date_start,'\'')` through `r stringr::str_remove_all(ais_date_end,'\'')`.

### Vessel info

Vessel characteristics data processed are by Global Fishing Watch (@park2023tracking). We use the V3 pipeline table `pipe_ais_v3_published.vi_ssvid_v20240601`. Variables of interest within this table include the following
(descriptions are taken directly from the schema for
`pipe_ais_v3_published.vi_ssvid_v20240301`):

-   `ssvid`: source specific vessel id; MMSI for AIS
-   `best.flag`: best flag state (ISO3) for the vessel
-   `best.best_vessel_class`: best vessel class for the vessel (using
    official registry information where available, or the GFW
    vessel characteristics algorithm where not available)
-   `best.best_engine_power_kw `: best engine power (kilowatts) for
    the vessel (using official registry information where available, or
    the GFW characteristics algorithm where not
    available)
-   `activity.active_hours`: hours the vessel was broadcasting AIS and moving more than 0.1 knots
-   `activity.offsetting`: true if this vessel has been seen with an offset postition at some point between 2012 and 2019
-   `activity.overlap_hours_multinames`: the total numbers of hours of overlap
    between two segments where, over the time period of the two segments
    that overlap (including the non-overlapping time of the segments),
    the vessel broadcast two or more normalized name, where each
    normalized name was bradcast at least 10 or more times. That is a
    bit complicated, but the goal is to identify overlapping segments
    where there were likely more than one identity. (this should be 0;
    if it is \> 0, it can be used as a filter to remove potentially
    erroneous/noisy vessels)
    
We filter to just those vessels where `best.best_vessel_class = squid_jigger`. Additionally, to reduce noise, we filter out vessels that broadcast exceedingly infrequently (i.e., `activitiy.active_hours < 24`) or are noisy/spoofing/offsetting vessels (i.e.,  `NOT activity.offsetting OR activity.overlap_hours_multinames > 0.`) They are simply not reliable and will not provide good effort estimates. This leaves us with `r prettyNum(nrow(squid_vessel_list), big.mark = ",")` squid vessels for our analysis.

### Night light detections using VIIRS (Visible Infrared Imaging Radiometer Suite)

As an alternative to AIS-based fishing effort, we can use the [NASA VIIRS (Visible Infrared Imaging Radiometer Suite)](https://www.earthdata.nasa.gov/sensors/viirs) data product to detect night light emissions from vessels. When the appropriate radiance threshold is applied, these can generally be assumed to represent light-luring squid vessels. Since use only the single most accurate VIIRS detection measurements each day, these can also be thought of as representing a fishing effort metric of vessel-days. We use the VIIRS data as an alternative fishing effort metric to AIS-based fishing effort since AIS is not used on all vessels, and since it can also be disabled on the vessels that do use it.

We leverage the VIIRS boat detection (VBD) dataset developed by @elvidge2015automatic. This dataset is available through GFW as the BigQuery table `pipe_viirs_production_v20180723.raw_vbd_global`. 
Variables of interest within this table include the following
(descriptions are taken directly from the schema for
`pipe_viirs_production_v20180723.raw_vbd_global`):

-   `id_Key`: Unique VBD ID.
-   `Date_Mscan`: VBD pixel date-time at mid-point of DNB scan reported in Universal Time 
-   `Lat_DNB`: VBD pixel latitude from VIIRS DNB geolocation file
-   `Lon_DNB`: VBD pixel longitude from VIIRS DNB geolocation file
-   `Rad_DNB`: Radiance of VBD pixel in VIIRS DNB band  
-   `QF_Detect`: Integer quality flag for VBD pixel, yielding information about quality and type of detection 
-   `SATZ_GDNBO`: Satellite zenith angle relative to the VBD pixel measured from the local vertical (from VIIRS GDNBO file)
-   `File_DNB`: VIIRS DNB HDF5 file  

We then apply similar processing as @seto2023fishing, which includes the following steps:

- Reduce false detections near South America caused by the the South Atlantic Anomaly (an abundance of high-energy particles in the atmosphere). 
- Use a same radiance threshold of 10 nW cm−2 sr−1 used by @seto2023fishing (and established by @park2020illuminating) in order to filter detections to those likely engaged in in pelagic light-luring activity. 
- To eliminate double-counting when there may be multiple satellite overpasses on a single night, only count detections from the overpass with the smallest satellite zenith angle (smaller zenith angles are more accurate)

We then finally aggregate the total detections for each `r spatial_resolution`x`r spatial_resolution` degree pixel and month. 

### EEZ information

For each `r spatial_resolution`x`r spatial_resolution` degree pixel, we determine a number of EEZ features. To do so, we leverage the EEZ shapefiles and boundaries from [Marine Regions v12](https://www.marineregions.org/downloads.php)(@marineregionsv12). We first determine whether the centroid of the pixel is on the high seas or within an EEZ (`high_seas`). For pixels that are within an EEZ (`eez_id`), we determine its Marine Regions EEZ ID and its ISO3 sovereign country code (`pixel_sovereign1_iso3`); for pixels that are on the high seas, the EEZ id takes a value of `high_seas` and the country code also takes a value of `high_seas`. We next determine the distance in meters from the centroid of the pixel to the nearest 200nm EEZ/high seas boundary line (`distance_to_nearest_eez_m`); so for pixels on the high seas, this number represents the distance to the nearest EEZ; for pixels inside EEZs, this represents the shortest distance to the high sea. For high seas pixels, we finally determine the country EEZ ID (`nearest_eez_id`) and ISO3 sovereign country code (`nearest_pixel_sovereign1_iso3`) of this nearest EEZ; for pixels that are within an EEZ, this both take the values of the EEZ the pixel is within. Note that for our analysis, we exclude the Anarctica EEZ and treat it as the high seas; we also exclude any joint claim or disputed EEZs.

### Joined datasets

#### SST and AIS-based effort

One version of the final dataset we use for our analysis is a combination of the gridded AIS-based fishing effort data and gridded SST data. We inner join the AIS-based effort and SST datasets by `r spatial_resolution`x`r spatial_resolution` degree pixel and month.  We finally left join the Oceanic Niño Index (ONI) monthly data (by month) and the EEZ information  (by pixel).  Since the AIS-based effort dataset is disaggregated by flag, each row in the joined dataset represents flag-level effort in a given pixel and month, with the corresponding SST for that pixel and month.

Note that the joined dataset does not contain flag-pixel-months with zero AIS-based fishing effort (i.e., the data are conditional on there being some effort for any given flag-pixel-month). If desired, once we have a spatial scope with which to restrict the analysis, we could construct a dataset for that bounding box that includes zero fishing effort flag-pixel-month rows.  

The joined dataset can be loaded in R using the command `targets::tar_load(joined_dataset_ais)`. The dataset has the following colums:

* **month**: Month (first day of month) (date)  
* **flag** : Fishing vessel flag (character)
* **lon_bin**:  `r spatial_resolution` degree longitude bin (degrees) (numeric)  
* **lat_bin**:  `r spatial_resolution` degree latitude bin (degrees) (numeric)  
* **flag**:  Fishing flag (character)  
* **sst_deg_c_mean**: Mean sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **sst_deg_c_sd**: Standard deviation of sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **sst_deg_c_min**: Minimum sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **sst_deg_c_max**: Maxiumum sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **fishing_hours**:  Total fishing effort across vessels (hours) (numeric)  
* **fishing_kw_hours**:  Total fishing effort across vessels (kW-hours) (numeric)  
* **oceanic_nino_index**: Oceanic Niño Index (ONI) (numeric) 
* **eez_id**: Marine regions EEZ ID of the pixel; for high seas pixels, this takes a value of `high_seas` (string)
* **distance_to_nearest_eez_m**: This is the distance to the nearest 200nm EEZ/high seas boundary (for pixels on the high seas, this number represents the distance to the nearest EEZ; for pixels inside EEZs, this represents the shortest distance to the high seas) (meters) (numeric)
* **nearest_eez_id**: For high seas pixels, this is the Marine regions EEZ ID of the nearest EEZ pixel; for pixels within an EEZ, this is the Marine regions EEZ ID of the pixel (string)
* **eez_iso3**: For pixels within an EEZ, this is the ISO3 sovereign country code for the pixel; for high seas pixels, this takes a value of `high_seas` (string)
* **nearest_eez_iso3**: For high seas pixels, this is the ISO3 sovereign country code for the nearest EEZ pixel; for pixels within an EEZ, this the pixel's ISO3 sovereign country code (string)
* **high_seas**: This is a logical indicating whether the pixel is within the high seas or not (logical)

### Joined datasets

#### SST and AIS-based effort

One version of the final dataset we use for our analysis is a combination of the gridded AIS-based fishing effort data and gridded SST data. We inner join the AIS-based effort and SST datasets by `r spatial_resolution`x`r spatial_resolution` degree pixel and month.  We finally left join the Oceanic Niño Index (ONI) monthly data (by month) and the EEZ information  (by pixel).  Since the AIS-based effort dataset is disaggregated by flag, each row in the joined dataset represents flag-level effort in a given pixel and month, with the corresponding SST for that pixel and month.

Note that the joined dataset does not contain flag-pixel-months with zero AIS-based fishing effort (i.e., the data are conditional on there being some effort for any given flag-pixel-month). If desired, once we have a spatial scope with which to restrict the analysis, we could construct a dataset for that bounding box that includes zero fishing effort flag-pixel-month rows.  

The joined dataset can be loaded in R using the command `targets::tar_load(joined_dataset_ais)`. The dataset has the following colums:

* **month**: Month (first day of month) (date)  
* **flag** : Fishing vessel flag (character)
* **lon_bin**:  `r spatial_resolution` degree longitude bin (degrees) (numeric)  
* **lat_bin**:  `r spatial_resolution` degree latitude bin (degrees) (numeric)  * **flag**:  Fishing flag (character)  
* **sst_deg_c_mean**: Mean sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **sst_deg_c_sd**: Standard deviation of sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **sst_deg_c_min**: Minimum sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **sst_deg_c_max**: Maxiumum sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **fishing_hours**:  Total fishing effort across vessels (hours) (numeric)  
* **fishing_kw_hours**:  Total fishing effort across vessels (kW-hours) (numeric)  
* **oceanic_nino_index**: Oceanic Niño Index (ONI) (numeric) 
* **eez_id**: Marine regions EEZ ID of the pixel; for high seas pixels, this takes a value of `high_seas` (string)
* **distance_to_nearest_eez_m**: This is the distance to the nearest 200nm EEZ/high seas boundary (for pixels on the high seas, this number represents the distance to the nearest EEZ; for pixels inside EEZs, this represents the shortest distance to the high seas) (meters) (numeric)
* **nearest_eez_id**: For high seas pixels, this is the Marine regions EEZ ID of the nearest EEZ pixel; for pixels within an EEZ, this is the Marine regions EEZ ID of the pixel (string)
* **eez_iso3**: For pixels within an EEZ, this is the ISO3 sovereign country code for the pixel; for high seas pixels, this takes a value of `high_seas` (string)
* **nearest_eez_iso3**: For high seas pixels, this is the ISO3 sovereign country code for the nearest EEZ pixel; for pixels within an EEZ, this the pixel's ISO3 sovereign country code (string)
* **high_seas**: This is a logical indicating whether the pixel is within the high seas or not (logical)
* **within_analysis_scope**: This is a logical for whether the pixel is within the analysis scope or note (logical)  

Here we summarize these data (@tbl-summary-stats-joined-dataset-ais):

```{r}
#| label: tbl-summary-stats-joined-dataset-ais
#| tbl-cap: Summary statistics for joined dataset that includes gridded SST and AIS-based fishing effort

joined_dataset_ais_summary
```

#### SST and VIIRS detections

The other version of the final dataset we use for our analysis is a combination of the  gridded VIIRS detections data and gridded SST data, and the gridded VIIRS detections. We inner join the VIIRS detections and SST datasets by `r spatial_resolution`x`r spatial_resolution` degree pixel and month. Note that the VIIRS detection dataset only covers January 2017 through December 2021, so that is also the time range of this joined dataset. We finally left join the Oceanic Niño Index (ONI) monthly data (by month) and the EEZ information  (by pixel). Since the VIIRS dataset is not disaggregated by flag, each row in this joined dataset represents total detections in a given pixel and month, with the corresponding SST for that pixel and month.

Note that the joined dataset does not contain pixel-months with zero VIIRS detections (i.e., the data are conditional on there being some detections for any given pixel-month). If desired, once we have a spatial scope with which to restrict the analysis, we could construct a dataset for that bounding box that includes zero VIIRS detection pixel-month rows.  

The joined dataset can be loaded in R using the command `targets::tar_load(joined_dataset_viirs)`. The dataset has the following colums:

* **month**: Month (first day of month) (date)  
* **lon_bin**:  `r spatial_resolution` degree longitude bin (degrees) (numeric)  
* **lat_bin**:  `r spatial_resolution` degree latitude bin (degrees) (numeric)
* **sst_deg_c_mean**: Mean sea surface temperature, aggregated from the raw daily 0.25x0.25 degree data (degrees C) (numeric) 
* **viirs_detections**: Night light detections from the VIIRS dataset (numeric)  
* **oceanic_nino_index**: Oceanic Niño Index (ONI) (numeric) 
* **eez_id**: Marine regions EEZ ID of the pixel; for high seas pixels, this takes a value of NA (string)
* **distance_to_nearest_eez_m**: This is the distance to the nearest 200nm EEZ/high seas boundary (for pixels on the high seas, this number represents the distance to the nearest EEZ; for pixels inside EEZs, this represents the shortest distance to the high seas) (meters) (numeric)
* **nearest_eez_id**: For high seas pixels, this is the Marine regions EEZ ID of the nearest EEZ pixel; for pixels within an EEZ, this is the Marine regions EEZ ID of the pixel (string)
* **eez_iso3**: For pixels within an EEZ, this is the ISO3 sovereign country code for the pixel; for high seas pixels, this takes a value of `high_seas` (string)
* **nearest_eez_iso3**: For high seas pixels, this is the ISO3 sovereign country code for the nearest EEZ pixel; for pixels within an EEZ, this the pixel's ISO3 sovereign country code (string)
* **high_seas**: This is a logical indicating whether the pixel is within the high seas or not (logical)
* **within_analysis_scope**: This is a logical for whether the pixel is within the analysis scope or note (logical)  


Here we summarize these data (tbl-summary-stats-joined-dataset-VIIRS):

```{r}
#| label: tbl-summary-stats-joined-dataset-VIIRS
#| tbl-cap: Summary statistics for joined dataset that includes gridded SST and VIIRS detections

joined_dataset_viirs_summary
```

## Geographic analysis scope

Our proposed geographic scope encompasses a bounding box with a longitude range from `r analysis_scope_lon[1]` degrees to `r analysis_scope_lon[2]` degrees and a latitude range  from `r analysis_scope_lat[1]` degrees to `r analysis_scope_lat[2]` degrees (@fig-effort-map-with-scope; @fig-effort-map-with-scope-zoom). This longitude range encompasses band of equatorial fishing effort to the west and the EEZs off the western coast of South America. The latitude range covers the maximum latitude of the [South Pacific Regional Fisheries Management Organisation (SPRFMO)](https://data.apps.fao.org/map/catalog/srv/eng/catalog.search#/metadata/fao-rfb-map-sprfmo) and extends beyond the southern latitude where the north-south band of fishing effort is currently concentrated. The bounding box extends beyond where fishing effort is currently concentrated, which means that in our predictions under future climate change scenarios, we could capture shifts of fishing effort beyond it current range.

```{r}
#| label: fig-effort-map-with-scope
#| fig-cap: Map of squid jigger fishing effort from 2016 through August 2024, aggregating effort across effort, flags, and time for each pixel. EEZ boundaries from Marine Regions V12 are shown in orange; the SPRFRMO boundary is shown in yellow; the currently proposed analysis scope bounding box is shown as a red outline.

ggplot()  +
  geom_tile(data = joined_dataset_ais |>
              dplyr::group_by(lat_bin,
                              lon_bin) |>
              dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
              dplyr::ungroup(),
            aes(fill = fishing_kw_hours,
                x = lon_bin,
                y = lat_bin)) +
  geom_sf(data = eez,
          fill = NA,
          color = "orange") +
  geom_sf(data = sprfmo,
          fill = NA,
          color = "yellow") +
   geom_sf(data = analysis_bounding_box,
          fill = NA,
          color = "red",
          linewidth = 0.55) +                  
  geom_sf(data = land,
          color = "#374a6d",
          fill = "#374a6d") +
  scale_fill_viridis_c("Fishing effort (kwW-hours)",
                       trans = "log10",
                       option = "mako",
                       na.value = "black") +
  labs(x = '',
       y= '') +
  theme_map() +
  guides(fill = guide_colorbar(title.position = "top",
                               title.hjust = 0.5,
                               frame.colour = "black",
                               ticks.colour = "black",
                               barwidth = unit(12, "cm"),
                               barheight = unit(1, "cm"))) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0))
```

```{r}
#| label: fig-effort-map-with-scope-zoom
#| fig-cap: Zoomed in map of squid jigger fishing effort from 2016 through August 2024 to the proposed analysis scope, aggregating effort across effort, flags, and time for each pixel. EEZ boundaries from Marine Regions V12 are shown in orange; the SPRFRMO boundary is shown in yellow; the currently proposed analysis scope bounding box is shown as a red outline.

ggplot()  +
  geom_tile(data = joined_dataset_ais |>
              dplyr::group_by(lat_bin,
                              lon_bin) |>
              dplyr::summarize(fishing_kw_hours = sum(fishing_kw_hours)) |>
              dplyr::ungroup(),
            aes(fill = fishing_kw_hours,
                x = lon_bin,
                y = lat_bin)) +
  geom_sf(data = eez,
          fill = NA,
          color = "orange") +
  geom_sf(data = sprfmo,
          fill = NA,
          color = "yellow") +
   geom_sf(data = analysis_bounding_box,
          fill = NA,
          color = "red",
          linewidth = 0.65) +                  
  geom_sf(data = land,
          color = "#374a6d",
          fill = "#374a6d") +
  scale_fill_viridis_c("Fishing effort (kwW-hours)",
                       trans = "log10",
                       option = "mako",
                       na.value = "black") +
  labs(x = '',
       y= '') +
  theme_map() +
  guides(fill = guide_colorbar(title.position = "top",
                               title.hjust = 0.5,
                               frame.colour = "black",
                               ticks.colour = "black",
                               barwidth = unit(12, "cm"),
                               barheight = unit(1, "cm"))) +
  scale_x_continuous(expand = c(0, 0),
                     limits = c(analysis_scope_lon[1]-10, analysis_scope_lon[2]+10)) +
  scale_y_continuous(expand = c(0, 0),
                     limits = c(analysis_scope_lat[1]-10, analysis_scope_lat[2]+10))
```

